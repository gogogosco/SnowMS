/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MapleBlockedOpcodeViewer.java
 *
 * Created on May 9, 2009, 10:27:38 PM
 */

package net.sf.odinms.exttools.maplepcap;

import java.io.FileOutputStream;
import java.util.Map.Entry;
import java.util.Properties;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Raz
 */
public class MapleBlockedOpcodeViewer extends javax.swing.JFrame implements TableModelListener {

	private MaplePcapture capture;

    /** Creates new form MapleBlockedOpcodeViewer */
    public MapleBlockedOpcodeViewer(MaplePcapture capture) {
        try {
	    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
	} catch (Exception e) {
	    e.printStackTrace();
	}
	initComponents();
	 opcodeTable.getModel().addTableModelListener(this);
	this.capture = capture;
	updateTable();
    }

	public void updateTable() {
		DefaultTableModel dtm = (DefaultTableModel) opcodeTable.getModel();
		if (dtm.getRowCount() > 0) {
			dtm.getDataVector().removeAllElements();
		}

		for (Entry<String, Boolean> rowData : capture.getBlockedOpcodes().entrySet()) {
			dtm.addRow(new Object[]{rowData.getKey(), rowData.getValue()});
		}
	}

	@Override
	 public void tableChanged(TableModelEvent e) {
        int row = e.getFirstRow();
		if (row > -1 && e.getType() == TableModelEvent.UPDATE) {
			TableModel model = (TableModel) e.getSource();
			String key = (String) model.getValueAt(row, 0);
			boolean value = (Boolean) model.getValueAt(row, 1);
			capture.getBlockedOpcodes().put(key, value);
			updateTable();
		}

    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        opcodeTable = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Snow's Packet Header Viewer");

        opcodeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Opcode Name", "Blocked"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        opcodeTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        opcodeTable.setShowHorizontalLines(false);
        opcodeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(opcodeTable);
        opcodeTable.getColumnModel().getColumn(0).setResizable(false);
        opcodeTable.getColumnModel().getColumn(1).setResizable(false);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addComponent(closeButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(deleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
		//CLOSE
		setVisible(false);
}//GEN-LAST:event_closeButtonActionPerformed

	private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
		//DELETE BLOCKED OPCODE
		int rowIndex = opcodeTable.getSelectedRow();
		if (rowIndex > -1) {
			String key = (String) opcodeTable.getValueAt(rowIndex, 0);
			capture.getBlockedOpcodes().remove(key);
			updateTable();
		}
}//GEN-LAST:event_deleteButtonActionPerformed

	private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
		//SAVE OPCODE CHANGES
		/*Properties prop = capture.getSettings();
		for(int rowIndex = 0; rowIndex < jTable1.getRowCount(); rowIndex++) {
			prop.put(jTable1.getValueAt(rowIndex, 0), ((Boolean) jTable1.getValueAt(rowIndex, 1)) ? 1 : 0);
		}
		try {
		prop.store(new FileOutputStream("settings.properties"), null);
		} catch (Exception e) {
			System.out.println("Error storing properties file");
			e.printStackTrace();
		}*/
}//GEN-LAST:event_saveButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable opcodeTable;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

}
